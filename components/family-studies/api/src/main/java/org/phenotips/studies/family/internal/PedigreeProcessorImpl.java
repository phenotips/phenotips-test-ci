/*
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
 */
package org.phenotips.studies.family.internal;

import org.phenotips.studies.family.Pedigree;
import org.phenotips.studies.family.PedigreeProcessor;

import org.xwiki.component.annotation.Component;

import java.util.LinkedList;
import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.json.JSONObject;
import org.slf4j.Logger;

/**
 * Converts the JSON generated by the pedigree into the default format accepted by PhenoTips.
 *
 * @version $Id$
 * @since 1.2RC1
 */
@Component
public class PedigreeProcessorImpl implements PedigreeProcessor
{
    @Inject
    private Logger logger;

    /**
     * Returns a list of Phenotips JSONs for each patient found in pedigree.
     *
     * @param pedigree a Pedigree object
     * @return a list of patient JSONs. if pedigree is not valid returns an empty list.
     */
    @Override
    public List<JSONObject> convert(Pedigree pedigree)
    {
        List<JSONObject> convertedPatients = new LinkedList<>();

        if (pedigree != null) {
            JSONObject data = pedigree.getData();

            String versionKey = "JSON_version";
            if (data.has(versionKey)
                && !StringUtils.equalsIgnoreCase(data.getString(versionKey), "1.0")) {
                this.logger.warn("The version of the pedigree JSON differs from the expected.");
            }

            return pedigree.extractPatientJSONProperties();
        }

        return convertedPatients;
    }
}
